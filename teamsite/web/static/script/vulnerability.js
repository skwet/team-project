// Vulnerability scanner results processing


let scanResultsInput = `
           
`;

const scanResults = document.querySelector('.vulnerability-results');

function processTextResultText(inputText) {
    const header = "<h2 >Report Summary</h2>";
    
    const urlRegex = /(https?:\/\/[^\s]+)/g;

    const linkify = (text) => text.replace(urlRegex, function(url) {
        return '<br>&emsp;<a href="' + url + '" target="_blank" class="highlighted-link">' + url + '</a>';
    });
    
    let text = inputText;

    // Replace + /: with bullet point, --- and + with nothing, newlines with <br>, and - with a nothing
    text = text.replace(/\+ \/:/g, '&bull;').replace(/---|\+/g, '').replace(/(\r\n|\n|\r)/gm, '<br>').replace(/-/, '');
    text = text.replace(/(SSL Info:)/g, '$1<br>');
    text = `<span class="scan-results-main-section">${text}</span>`;
   
    text = linkify(text);

    return header + text;
}

const vulnerabilityResDiv = document.createElement('div');
vulnerabilityResDiv.id = 'report-text';
vulnerabilityResDiv.innerHTML = processTextResultText(scanResultsInput);
scanResults.prepend(vulnerabilityResDiv);


const button = document.querySelector('.scan-results-output-bt');
button.addEventListener('click', function() {
    const reportText = document.getElementById('report-text').innerText;
    navigator.clipboard.writeText(reportText)
        .then(() => {
            console.log('Report copied to clipboard');
        })
        .catch(err => {
            console.error('Could not copy report: ', err);
        });
});





